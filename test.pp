Program test101;

{$H+}{$LongStrings ON}  


Uses SysUtils,DateUtils, FGInt;

Var
    f1,f2,f3,f4,f5,f6,f7,f8,f9: TFGInt;
    t1,t2 : TDateTime;
    S, strIn, strOut, resultStr : String;
    i, j, treshold, time : longword;
	
	
Begin
writeln;

writeln('- String conversion tests:');

strIn := '1234567890987654321';
Base10StringToFGInt(strIn, f1);
FGIntToBase10String(f1, strOut);
If strIn = strOut then resultStr := 'success' else resultStr := '! failed !';
Writeln(' Base10 conversion test: ' + resultStr);
FGIntDestroy(f1);

strIn := '11110000111100001010';
Base2StringToFGInt(strIn, f1);
FGIntToBase2String(f1, strOut);
If strIn = strOut then resultStr := 'success' else resultStr := '! failed !';
Writeln(' Base2 conversion test: ' + resultStr);
FGIntDestroy(f1);



writeln('- Arithmetic tests:');

strIn := '12345678909876543210';
Base10StringToFGInt(strIn, f1);
strIn := '100000000000000000001';
Base10StringToFGInt(strIn, f2);
FGIntAdd(f1, f2, f3);
FGIntSub(f3, f1, f4);
If FGIntCompareAbs(f2, f4) = Eq then resultStr := 'success' else resultStr := '! failed !';
Writeln(' Addition/subtraction test: ' + resultStr);
FGIntDestroy(f1);
FGIntDestroy(f2);
FGIntDestroy(f3);
FGIntDestroy(f4);

strIn := '1234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909';
Base10StringToFGInt(strIn, f1);
strIn := '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000';
Base10StringToFGInt(strIn, f2);
FGIntPencilPaperMultiply(f1, f2, f3);
FGIntKaratsubaMultiply(f1, f2, f4);
If FGIntCompareAbs(f3, f4) = Eq then resultStr := 'success' else resultStr := '! failed !';
Writeln(' Multiplication test: ' + resultStr);
FGIntDestroy(f1);
FGIntDestroy(f2);
FGIntDestroy(f3);
FGIntDestroy(f4);

strIn := '1234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909';
Base10StringToFGInt(strIn, f1);
FGIntPencilPaperSquare(f1, f2);
FGIntKaratsubaSquare(f1, f3);
If FGIntCompareAbs(f2, f3) = Eq then resultStr := 'success' else resultStr := '! failed !';
Writeln(' Squaring test: ' + resultStr);
FGIntDestroy(f1);
FGIntDestroy(f2);
FGIntDestroy(f3);





// strIn := '123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210123456789098765432101234567890987654321012345678909876543210';
// Base10StringToFGInt(strIn, f1);
// writeln('f1 has ' + inttostr(f1.number[0]));
// while f1.number[0] > 2 Do
// Begin
//   treshold := f1.number[0];
//     t1 := Now;
//     for i := 1 to 1000 Do
//         Begin
//            FGIntPencilPaperSquare(f1, f2);
//         end;
//     t2 := Now;
//     // FGIntToBase10String(f3,S);
//     Writeln(inttostr(32*f1.number[0]) + ' bit regular squaring took '+inttostr(MilliSecondsBetween(t1,t2))+' milliseconds');
//   repeat
//     treshold := treshold div 2;
//     t1 := Now;
//     for i := 1 to 1000 Do
//         Begin
//             FGIntKaratsubaSquare(f1, f3, treshold);
//         end;
//     t2 := Now;
//     // FGIntToBase10String(f3,S);
//     Writeln(inttostr(32*f1.number[0]) + ' bit FGIntKaratsubaSquare took '+inttostr(MilliSecondsBetween(t1,t2))+' milliseconds with treshold ' + inttostr(treshold));
//     //    Writeln('Multiplication took '+inttostr(MilliSecondsBetween(t1,t2))+' milliseconds');
//   until treshold < 50;
//   FGIntShiftRightBy32Times(f1, 10);
//   // FGIntShiftRightBy32Times(f2, 10);
// End;
//     // readln;
    
    
    
//    readln;

writeln;

End.
